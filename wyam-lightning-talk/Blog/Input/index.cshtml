@using FluentBootstrap;

@section Header {
    <div class="site-heading">
        <h1>Welcome!</h1>
        <hr class="small">
        <span class="subheading">My name is Dave Glick. By day, I'm a .NET and open source enthusiast. By night, I'm a husband and father. Somewhere in between the two I write stuff here.</span>
    </div>
}

@using (var row = Bs.GridRow().Begin())
{
    using (row.GridColumn().SetSm(8).AddCss("right-border").Begin())
    {
        bool first = true;
        foreach(IDocument doc in Documents
            .Where(x => x.ContainsKey("Published"))
            .OrderByDescending(x => x.Get<DateTime>("Published"))
            .Take(3))
        {
            string file = doc.String("RelativeFilePath").Replace("\\", "/");
            string link = "/" + System.IO.Path.ChangeExtension(file, "EXT").Replace(".EXT", "");
                
            if (!first)
            {
                <hr /> 
            }
            first = false;
            string lead = doc.String("Lead");
            <div class="post-preview">
                <a href="@link">
                    <h2 class="post-title">@doc.String("Title")</h2>
                    @if(!string.IsNullOrWhiteSpace(lead))
                    {
                        <h3 class="post-subtitle">@lead</h3>
                    }
                </a>
                <p class="post-meta">Posted on @(doc.Get<DateTime>("Published").ToLongDateString())</p>
                @Html.Raw(doc.String("Excerpt"))             
            </div>       
        }
    }
    using (row.GridColumn().SetSm(4).AddCss("sidebar").Begin())
    {
        <hr class="@Css.VisibleXsBlock" />
        <h5>Tags</h5>
        <div>
            @{                
            	List<KeyValuePair<string, int>> Tags = Documents
                    .Where(x => x.ContainsKey("Published") && x.ContainsKey("Tags"))
                    .SelectMany(x => x.Get<string[]>("Tags"))
                    .GroupBy(x => x)
                    .Select(x => new KeyValuePair<string, int>(x.Key, x.Count()))
                    .OrderByDescending(x => x.Value)
                    .Take(10)
                    .ToList(); 
            }            
            @foreach (KeyValuePair<string, int> tag in Tags)
            { 
                @Html.TagButton(tag.Key, tag.Value)<br>
            }
        </div>
        <ul class="pager">
            <li class="next">
                <a href="/tags">View All Tags &rarr;</a>
            </li>
        </ul>
        <hr />
        <h5>On The Interwebs</h5>
        @Html.Partial("_SocialLinks")
        <hr />
        <h5>Older Posts</h5>
        @using (var list = Bs.List().Begin())
        {
            foreach(IDocument doc in Documents
                .Where(x => x.ContainsKey("Published"))
                .OrderByDescending(x => x.Get<DateTime>("Published"))
                .Skip(3)
                .Take(4))
            {
                string file = doc.String("RelativeFilePath").Replace("\\", "/");
                string link = "/" + System.IO.Path.ChangeExtension(file, "EXT").Replace(".EXT", "");           
                @list.ListItem(Bs.Link(@doc.String("Title"), link))
            }
        }
        <ul class="pager">
            <li class="next">
                <a href="/posts">Archive &rarr;</a>
            </li>
        </ul>
    } 
}